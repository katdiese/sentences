{
  "_args": [
    [
      "csshake",
      "/Users/Kathy_Dieser/galvanize/feproj"
    ]
  ],
  "_from": "src/styles/csshake",
  "_id": "csshake@1.5.0",
  "_inCache": true,
  "_installable": true,
  "_location": "/csshake",
  "_phantomChildren": {},
  "_requested": {
    "name": null,
    "raw": "csshake",
    "rawSpec": "csshake",
    "scope": null,
    "spec": "/Users/Kathy_Dieser/galvanize/feproj/src/styles/csshake",
    "type": "directory"
  },
  "_requiredBy": [
    "#USER"
  ],
  "_resolved": "file:src/styles/csshake",
  "_shasum": "3c036a9151c60ea941e31735dab16ff7227a8074",
  "_shrinkwrap": null,
  "_spec": "csshake",
  "_where": "/Users/Kathy_Dieser/galvanize/feproj",
  "author": {
    "email": "elrumordelaluz@hotmail.com",
    "name": "Lionel T",
    "url": "http://elrumordelaluz.com"
  },
  "bugs": {
    "url": "https://github.com/elrumordelaluz/csshake/issues"
  },
  "dependencies": {},
  "description": "Some CSS classes to move your DOM!",
  "devDependencies": {
    "gzip-size-cli": "^1.0.0",
    "node-sass": "^3.3.3",
    "pretty-bytes": "^2.0.1"
  },
  "gitHead": "00ba76d781feb4c143ed9d53e79e4281b3a513ab",
  "homepage": "https://github.com/elrumordelaluz/csshake",
  "keywords": [
    "animations",
    "css",
    "transitions"
  ],
  "license": "MIT",
  "main": "index.js",
  "name": "csshake",
  "optionalDependencies": {},
  "readme": "# Csshake [![npm version](https://badge.fury.io/js/csshake.svg)](http://badge.fury.io/js/csshake)\nSome CSS classes to move your DOM!\n[Live Demo](http://elrumordelaluz.github.io/csshake/)\n\n### Origins\nI had to do a 'shake-animation' for a big project. First, I did it in vanilla CSS.\nAfter finish it I discover [this](http://jackrugile.com/jrumble/) cool jQuery plugin by [@jackrugile](https://twitter.com/jackrugile).\nThen I started to think in made *[this little CSS project](http://elrumordelaluz.github.io/csshake/)*\n\n### Install\nFork this repo\n```\n  $ git clone https://github.com/elrumordelaluz/csshake.git\n```\n\nor via Bower\n```\n  $ bower install csshake\n```\n\nor via npm\n```\n  $ npm i csshake\n```\n\n#### scripts\n```\n  $ npm run watch\n  $ npm run build:raw\n  $ npm run build:min\n```\n\n#### Download Center http://csshake.surge.sh/\nYou could download the complete `csshake.css` file or separated files for each shake animation (i.e `csshake-little.css`).\nEach one expanded or minified.\n\n### CDN\nNow is also available in `cdnjs` for each shake animation: https://cdnjs.com/libraries/csshake\n\n\n### How to use\nFirst include the CSS file \n```html\n  <link rel=\"stylesheet\" type=\"text/css\" href=\"csshake.css\">` \n```\n\nThen call the diffetent classes on the element you want to shake!\n```html\n  <div class=\"shake\"></div>\n  <div class=\"shake shake-hard\"></div>\n  <div class=\"shake shake-slow\"></div>\n  <div class=\"shake shake-little\"></div>\n  <div class=\"shake shake-horizontal\"></div>\n  <div class=\"shake shake.vertical\"></div>\n  <div class=\"shake shake-rotate\"></div>\n  <div class=\"shake shake-opacity\"></div>\n  <div class=\"shake shake-crazy\"></div>\n```\n\nAdd also classes to control the `animation-play-state`.\n```html\n<!-- Freeze the animation at that point when :hover -->\n<div class=\"shake shake-freeze\"></div>\n<!-- Continuous animation instead on :hover -->\n<div class=\"shake shake-constant\"></div>\n<!-- and stop when :hover -->\n<div class=\"shake shake-constant shake-constant--hover\"></div>\n```\n\n### Customize\nYou could customize the Sass @mixins to create new shaking animations, yeah!\nEditing the `do-shake` mixin in `scss/_tools.scss` file\n```scss\n.my-custom-shake {\n  @include do-shake(\n        $name: 'my-custom-shake', \n        $h: 5px, \n        $v: 5px, \n        $r: 3deg, \n        $dur: 100ms, \n        $precision: .02, \n        $opacity: false, \n        $q: infinite, \n        $t: ease-in-out, \n        $delay: null,\n        $chunk: 100%);\n}\n```\n\n`$name` {String} is the name for the keyframes animation\n\n`$h` {Number} is the max number for random to assign in x axis\n\n`$v` {Number} is the max number for random to assign in y axis\n\n`$r` {Number} is the max number for random rotation\n\n`$dur` {Number} is the `animation-duration` time value\n\n`$precision` {Number} is the precision of the keyframes animation. For example `.02` generates keyframes each 2% and `.1` each 10%. The calculation is `$step: 100 * $precision;`\n\n`$opacity` {Boolean} to apply random animation also in the opacity property\n\n`$q` {String} is the `animation-iteration-count` value\n\n`$t` {String} `animation-timing-function` value\n\n`$delay` {Number} `animation-delay` time value\n\n`$chunk` {Number} is the part of the keyframes where apply the animation\n\n=======\n\n### Changelog\n#### [v1.5.0](https://github.com/elrumordelaluz/csshake/releases/tag/v1.5) (October 5, 2015)\n- Improve the core mixin for a better output code\n- Generate the entire 'shake' animation from only one [@mixin](https://github.com/elrumordelaluz/csshake/blob/master/scss/_tools.scss#L30). Easier to cerate custom shakes animations classes.\n- Add a [new argument](https://github.com/elrumordelaluz/csshake/blob/master/scss/_tools.scss#L41) to allow animate only part of the 100% of keyframes. Solves [issue #25](https://github.com/elrumordelaluz/csshake/issues/25)\n- Add a [class](https://github.com/elrumordelaluz/csshake/blob/master/scss/_tools.scss#L3) to allow fire animation from a parent element. Solves [issue #16](https://github.com/elrumordelaluz/csshake/issues/16)\n- Update semanthics on modifiers classes\n- Export separated stylesheets for each animation. Solves [issue #20](https://github.com/elrumordelaluz/csshake/issues/20)\n\n======\n\nMade with â™¥ by [@elrumordelaluz](http://twitter.com/elrumordelaluz) using [Sass](http://sass-lang.com/).",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/elrumordelaluz/csshake.git"
  },
  "scripts": {
    "build:min": "mkdir -p dist/min && node-sass --output-style compressed scss/ -o dist/min && npm run suffix && npm run move",
    "build:raw": "node-sass scss/ -o dist/",
    "gzip": "gzip-size dist/csshake.min.css | pretty-bytes",
    "move": "mv dist/min/*.css dist && rm -r dist/min",
    "start": "npm run build && npm run gzip",
    "suffix": "for file in dist/min/*.css; do mv \"$file\" \"${file%.css}.min.css\"; done",
    "watch": "node-sass --watch scss/ -o dist/"
  },
  "version": "1.5.0"
}
